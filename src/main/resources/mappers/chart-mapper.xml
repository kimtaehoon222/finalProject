<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chartMapper">
	
	<resultMap type="ChartForMail" id="chartForMailResult">
		<result property="departD1" column="DEPART_D1"/>
		<result property="departD2" column="DEPART_D2"/>
		<result property="departD3" column="DEPART_D3"/>
		<result property="departD4" column="DEPART_D4"/>
		<result property="departD5" column="DEPART_D5"/>
		<result property="departD6" column="DEPART_D6"/>
		<result property="departD7" column="DEPART_D7"/>
	</resultMap>
	
	<!-- 월별 부서별 조회 : 수신 통계 -->
	<select id="selectChartListForMail" resultMap="chartForMailResult">
		<![CDATA[
		SELECT DECODE(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM'), NULL, '부서총합계', TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM')) GROUPBY 
		     , COUNT(CASE WHEN DEPT_CODE = 'D1' THEN 1 ELSE NULL END) DEPART_D1
		     , COUNT(CASE WHEN DEPT_CODE = 'D2' THEN 1 ELSE NULL END) DEPART_D2
		     , COUNT(CASE WHEN DEPT_CODE = 'D3' THEN 1 ELSE NULL END) DEPART_D3
		     , COUNT(CASE WHEN DEPT_CODE = 'D4' THEN 1 ELSE NULL END) DEPART_D4
		     , COUNT(CASE WHEN DEPT_CODE = 'D5' THEN 1 ELSE NULL END) DEPART_D5
		     , COUNT(CASE WHEN DEPT_CODE = 'D6' THEN 1 ELSE NULL END) DEPART_D6
		     , COUNT(CASE WHEN DEPT_CODE = 'D7' THEN 1 ELSE NULL END) DEPART_D7
	      FROM 
      		  (SELECT A.TO_MAIL AS TO_MAIL, B.DEPT_CODE AS DEPT_CODE, C.SEND_DATE AS SEND_DATE
	          FROM MAIL_INFO A 
	          JOIN EMPLOYEE B ON B.EMP_NO = A.TO_MAIL
	          JOIN MAIL C ON C.MAIL_NO = A.MAIL_NO)
		 WHERE DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
	       AND (SEND_DATE >= #{startDate} AND SEND_DATE <= #{endDate})
	  GROUP BY ROLLUP(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM'))
	  ORDER BY GROUPBY
	  	]]>
	</select>
	
	<!-- 일별 부서별 조회 : 수신 통계 -->
	<select id="selectChartListForMailByMonth" resultMap="chartForMailResult">
		<![CDATA[
		SELECT DECODE(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD'), NULL, '부서총합계', TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD')) GROUPBY 
			 , COUNT(CASE WHEN DEPT_CODE = 'D1' THEN 1 ELSE NULL END) DEPART_D1
			 , COUNT(CASE WHEN DEPT_CODE = 'D2' THEN 1 ELSE NULL END) DEPART_D2
			 , COUNT(CASE WHEN DEPT_CODE = 'D3' THEN 1 ELSE NULL END) DEPART_D3
			 , COUNT(CASE WHEN DEPT_CODE = 'D4' THEN 1 ELSE NULL END) DEPART_D4
			 , COUNT(CASE WHEN DEPT_CODE = 'D5' THEN 1 ELSE NULL END) DEPART_D5
			 , COUNT(CASE WHEN DEPT_CODE = 'D6' THEN 1 ELSE NULL END) DEPART_D6
			 , COUNT(CASE WHEN DEPT_CODE = 'D7' THEN 1 ELSE NULL END) DEPART_D7
	 	 FROM (SELECT A.TO_MAIL AS TO_MAIL, B.DEPT_CODE AS DEPT_CODE, C.SEND_DATE AS SEND_DATE
		      FROM MAIL_INFO A 
		      JOIN EMPLOYEE B ON B.EMP_NO = A.TO_MAIL
		      JOIN MAIL C ON C.MAIL_NO = A.MAIL_NO)
		WHERE DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
		  AND (SEND_DATE >= #{startDate} AND SEND_DATE <= #{endDate})
	 GROUP BY ROLLUP(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD'))
	 ORDER BY GROUPBY
	  	]]>
	</select>
	
	<!-- 월별 부서별 조회 : 발신 통계 -->
	<select id="selectChartListForMailFrom" resultMap="chartForMailResult">
		<![CDATA[
		SELECT DECODE(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM'), NULL, '부서총합계', TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM')) GROUPBY 
		     , COUNT(CASE WHEN DEPT_CODE = 'D1' THEN 1 ELSE NULL END) DEPART_D1
		     , COUNT(CASE WHEN DEPT_CODE = 'D2' THEN 1 ELSE NULL END) DEPART_D2
		     , COUNT(CASE WHEN DEPT_CODE = 'D3' THEN 1 ELSE NULL END) DEPART_D3
		     , COUNT(CASE WHEN DEPT_CODE = 'D4' THEN 1 ELSE NULL END) DEPART_D4
		     , COUNT(CASE WHEN DEPT_CODE = 'D5' THEN 1 ELSE NULL END) DEPART_D5
		     , COUNT(CASE WHEN DEPT_CODE = 'D6' THEN 1 ELSE NULL END) DEPART_D6
		     , COUNT(CASE WHEN DEPT_CODE = 'D7' THEN 1 ELSE NULL END) DEPART_D7
	      FROM 
      		  (SELECT A.FROM_MAIL AS FROM_MAIL, B.DEPT_CODE AS DEPT_CODE, C.SEND_DATE AS SEND_DATE
	          FROM MAIL_INFO A 
	          JOIN EMPLOYEE B ON B.EMP_NO = A.FROM_MAIL
	          JOIN MAIL C ON C.MAIL_NO = A.MAIL_NO)
		 WHERE DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
	       AND (SEND_DATE >= #{startDate} AND SEND_DATE <= #{endDate})
	  GROUP BY ROLLUP(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM'))
	  ORDER BY GROUPBY
	  	]]>
	</select>

	<!-- 일별 부서별 조회 : 발신 통계 -->
	<select id="selectChartListForMailByMonthFrom" resultMap="chartForMailResult">
		<![CDATA[
		SELECT DECODE(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD'), NULL, '부서총합계', TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD')) GROUPBY
		     , COUNT(CASE WHEN DEPT_CODE = 'D1' THEN 1 ELSE NULL END) DEPART_D1
			 , COUNT(CASE WHEN DEPT_CODE = 'D2' THEN 1 ELSE NULL END) DEPART_D2
			 , COUNT(CASE WHEN DEPT_CODE = 'D3' THEN 1 ELSE NULL END) DEPART_D3
			 , COUNT(CASE WHEN DEPT_CODE = 'D4' THEN 1 ELSE NULL END) DEPART_D4
			 , COUNT(CASE WHEN DEPT_CODE = 'D5' THEN 1 ELSE NULL END) DEPART_D5
			 , COUNT(CASE WHEN DEPT_CODE = 'D6' THEN 1 ELSE NULL END) DEPART_D6
			 , COUNT(CASE WHEN DEPT_CODE = 'D7' THEN 1 ELSE NULL END) DEPART_D7
	 	 FROM (SELECT A.FROM_MAIL AS FROM_MAIL, B.DEPT_CODE AS DEPT_CODE, C.SEND_DATE AS SEND_DATE
		      FROM MAIL_INFO A 
		      JOIN EMPLOYEE B ON B.EMP_NO = A.FROM_MAIL
		      JOIN MAIL C ON C.MAIL_NO = A.MAIL_NO)
		WHERE DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
		  AND (SEND_DATE >= #{startDate} AND SEND_DATE <= #{endDate})
	 GROUP BY ROLLUP(TO_CHAR(TO_DATE(SEND_DATE), 'YYYY/MM/DD'))
	 ORDER BY GROUPBY
	  	]]>
	</select>
	
	<resultMap type="ChartForAccount" id="chartForAccountResult">
		<result property="deptName" column="DEPT_NAME"/>
		<result property="jobName" column="JOB_NAME"/>
		<result property="empName" column="EMP_NAME"/>
		<result property="hireDate" column="HIRE_DATE"/>
		<result property="percent" column="PERCENT"/>
		<result property="salary" column="SALARY"/>
		<result property="middleSum" column="MIDDLE_SUM"/>
		<result property="totalSum" column="TOTAL_SUM"/>
	</resultMap>
	
	<!-- 전체 조회 -->
	<select id="selectSalaryChartListForAccount" resultMap="chartForAccountResult">
		SELECT C.DEPT_NAME, D.JOB_NAME, A.EMP_NAME, TO_CHAR(A.HIRE_DATE, 'YYYY/MM/DD') AS HIRE_DATE, B.SALARY
		     , ROUND(RATIO_TO_REPORT(B.SALARY) OVER(), 3) * 100 || '%' AS PERCENT
		     , SUM(B.SALARY) OVER(ORDER BY B.SALARY ASC 
                          		  ROWS BETWEEN UNBOUNDED PRECEDING 
                          		  AND CURRENT ROW) AS MIDDLE_SUM
             , SUM(B.SALARY) OVER() AS TOTAL_SUM
	  	  FROM EMPLOYEE A 
	 LEFT JOIN SALARY B ON B.EMP_NO = A.EMP_NO
	 LEFT JOIN DEPARTMENT C ON C.DEPT_CODE = A.DEPT_CODE
	 LEFT JOIN JOB D ON D.JOB_CODE = A.JOB_CODE
	</select>

	<!-- 부서 묶음 조회 -->
	<select id="selectSalaryChartListForAccountByDeptAll" resultMap="chartForAccountResult">
		SELECT C.DEPT_NAME, D.JOB_NAME, A.EMP_NAME, TO_CHAR(A.HIRE_DATE, 'YYYY/MM/DD') AS HIRE_DATE, B.SALARY
		     , ROUND(RATIO_TO_REPORT(B.SALARY) OVER (PARTITION BY A.DEPT_CODE), 3) * 100 || '%' AS PERCENT
		     , SUM(B.SALARY) OVER(PARTITION BY A.DEPT_CODE 
		                          ORDER BY B.SALARY ASC 
		                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS MIDDLE_SUM
		     , SUM(B.SALARY) OVER(PARTITION BY A.DEPT_CODE ) AS TOTAL_SUM
	 	  FROM EMPLOYEE A 
	 LEFT JOIN SALARY B ON B.EMP_NO = A.EMP_NO
	 LEFT JOIN DEPARTMENT C ON C.DEPT_CODE = A.DEPT_CODE
	 LEFT JOIN JOB D ON D.JOB_CODE = A.JOB_CODE
 		 WHERE A.DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
	  ORDER BY A.DEPT_CODE, B.SALARY
	</select>
	
	<!-- 특정 부서 묶음 조회 -->
	<select id="selectSalaryChartListForAccountByDeptOne" resultMap="chartForAccountResult">
		SELECT C.DEPT_NAME, D.JOB_NAME, A.EMP_NAME, TO_CHAR(A.HIRE_DATE, 'YYYY/MM/DD') AS HIRE_DATE, B.SALARY
		     , ROUND(RATIO_TO_REPORT(B.SALARY) OVER (PARTITION BY A.DEPT_CODE), 3) * 100 || '%' AS PERCENT
		     , SUM(B.SALARY) OVER(PARTITION BY A.DEPT_CODE 
		                          ORDER BY B.SALARY ASC 
		                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as MIDDLE_SUM
		     , SUM(B.SALARY) OVER(PARTITION BY A.DEPT_CODE ) AS TOTAL_SUM
		  FROM EMPLOYEE A 
	 LEFT JOIN SALARY B ON B.EMP_NO = A.EMP_NO
	 LEFT JOIN DEPARTMENT C ON C.DEPT_CODE = A.DEPT_CODE
	 LEFT JOIN JOB D ON D.JOB_CODE = A.JOB_CODE
		 WHERE C.DEPT_NAME = #{deptName}
		   AND A.JOB_CODE IN ('J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8')
	</select>
	
	<!-- 직급 묶음 조회 -->
	<select id="selectSalaryChartListForAccountByJobAll" resultMap="chartForAccountResult">
		SELECT C.DEPT_NAME, D.JOB_NAME, A.EMP_NAME, TO_CHAR(A.HIRE_DATE, 'YYYY/MM/DD') AS HIRE_DATE, B.SALARY
		     , ROUND(RATIO_TO_REPORT(B.SALARY) OVER (PARTITION BY A.JOB_CODE), 3) * 100 || '%' AS PERCENT
       		 , SUM(B.SALARY) OVER(PARTITION BY A.JOB_CODE 
                          	      ORDER BY B.SALARY ASC 
                                  ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as MIDDLE_SUM
             , SUM(B.SALARY) OVER(PARTITION BY A.JOB_CODE ) AS TOTAL_SUM
		  FROM EMPLOYEE A 
	 LEFT JOIN SALARY B ON B.EMP_NO = A.EMP_NO
	 LEFT JOIN DEPARTMENT C ON C.DEPT_CODE = A.DEPT_CODE
	 LEFT JOIN JOB D ON D.JOB_CODE = A.JOB_CODE
	     WHERE A.JOB_CODE IN ('J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8')
	  ORDER BY A.JOB_CODE, B.SALARY
	</select>
	
	<!-- 특정 직급 묶음 조회 -->
	<select id="selectSalaryChartListForAccountByJobOne" resultMap="chartForAccountResult">
		SELECT C.DEPT_NAME, D.JOB_NAME, A.EMP_NAME, TO_CHAR(A.HIRE_DATE, 'YYYY/MM/DD') AS HIRE_DATE, B.SALARY
		     , ROUND(RATIO_TO_REPORT(B.SALARY) OVER (PARTITION BY A.JOB_CODE), 3) * 100 || '%' AS PERCENT
		     , SUM(B.SALARY) OVER(PARTITION BY A.JOB_CODE 
		                          ORDER BY B.SALARY ASC 
		                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as MIDDLE_SUM
		     , SUM(B.SALARY) OVER(PARTITION BY A.JOB_CODE ) AS TOTAL_SUM
		  FROM EMPLOYEE A 
	 LEFT JOIN SALARY B ON B.EMP_NO = A.EMP_NO
	 LEFT JOIN DEPARTMENT C ON C.DEPT_CODE = A.DEPT_CODE
	 LEFT JOIN JOB D ON D.JOB_CODE = A.JOB_CODE
		 WHERE A.DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
		   AND D.JOB_NAME= #{jobName}
	</select>
	
	<resultMap type="ChartForPersonnel" id="chartForPersonnelResult">
		<result property="departD1" column="DEPART_D1"/>
		<result property="departD2" column="DEPART_D2"/>
		<result property="departD3" column="DEPART_D3"/>
		<result property="departD4" column="DEPART_D4"/>
		<result property="departD5" column="DEPART_D5"/>
		<result property="departD6" column="DEPART_D6"/>
		<result property="departD7" column="DEPART_D7"/>
	</resultMap>
	
	<!-- 월별 부서별 조회 : 입사자 현황 -->
	<select id="selectChartListForPersonnelIn" resultMap="chartForPersonnelResult">
		<![CDATA[
		SELECT DECODE(TO_CHAR(TO_DATE(HIRE_DATE), 'YYYY/MM'), NULL, '부서총합계', TO_CHAR(TO_DATE(HIRE_DATE), 'YYYY/MM')) GROUPBY 
		     , COUNT(CASE WHEN DEPT_CODE = 'D1' THEN 1 ELSE NULL END) DEPART_D1
		     , COUNT(CASE WHEN DEPT_CODE = 'D2' THEN 1 ELSE NULL END) DEPART_D2
		     , COUNT(CASE WHEN DEPT_CODE = 'D3' THEN 1 ELSE NULL END) DEPART_D3
		     , COUNT(CASE WHEN DEPT_CODE = 'D4' THEN 1 ELSE NULL END) DEPART_D4
		     , COUNT(CASE WHEN DEPT_CODE = 'D5' THEN 1 ELSE NULL END) DEPART_D5
		     , COUNT(CASE WHEN DEPT_CODE = 'D6' THEN 1 ELSE NULL END) DEPART_D6
		     , COUNT(CASE WHEN DEPT_CODE = 'D7' THEN 1 ELSE NULL END) DEPART_D7
		 FROM EMPLOYEE
		WHERE DEPT_CODE IN ('D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7')
		  AND HIRE_DATE >= #{startDate} AND HIRE_DATE <= #{endDate}
	 GROUP BY ROLLUP(TO_CHAR(TO_DATE(HIRE_DATE), 'YYYY/MM'))
 	 ORDER BY GROUPBY
	  	]]>
	</select>
	
	<!-- 일별 부서별 조회 : 입사자 현황 -->
	<select id="selectChartListForPersonnelInByMonth" resultMap="chartForPersonnelResult">
		<![CDATA[
		
	  	]]>
	</select>
</mapper>