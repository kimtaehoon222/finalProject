<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
	<mapper namespace="signMapper">
	
	<resultMap type="Sign" id="singResultSet">
		<id property="signNo" column="SIGN_NO"/>
		<result property="typeCode" column="TYPE_CODE"/>
		<result property="signTitle" column="SIGN_TITLE"/>
		<result property="empNo" column="EMP_NO"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="firstApprover" column="FIRST_APPROVER"/>
		<result property="finalApprover" column="FINAL_APPROVER"/>
		<result property="firstSignDate" column="FIRST_SIGN_DATE"/>
		<result property="finalSignDate" column="FINAL_SIGN_DATE"/>
		<result property="rejectDate" column="REJECT_DATE"/>
		<result property="statusCode" column="STATUS_CODE"/>
		<result property="statusName" column="STATUS_NAME"/>
		<result property="status" column="STATUS"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="createName" column="CREATE_NAME"/>
		<result property="signContent" column="SIGN_CONTENT"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="expiryDate" column="EXPIRY_DATE"/>
		<result property="firstDate" column="FIRST_DATE"/>
		<result property="lastDate" column="LAST_DATE"/>
		<result property="title" column="TITLE"/>
		<result property="reason" column="REASON"/>
		<result property="vCode" column="V_CODE"/>
		<result property="vName" column="V_NAME"/>
		<result property="ctgNo" column="CTG_NO"/>
		<result property="typeName" column="TYPE_NAME"/>
		<result property="deptCode" column="DEPT_CODE"/>
		<result property="deptName" column="DEPT_NAME"/>
		<result property="jobName" column="JOB_NAME"/>
		<result property="jobCode" column="JOB_CODE"/>
		<result property="refNo" column="REF_NO"/>
		<result property="firstSignName" column="FIRST_SIGN_NAME"/>
		<result property="firstSignJob" column="FIRST_SIGN_JOB"/>
		<result property="finalSignName" column="FINAL_SIGN_NAME"/>
		<result property="finalSignJob" column="FINAL_SIGN_JOB"/>
		
		
	</resultMap>

		<resultMap type="Employee" id="employeeResultSet">
		<result property="empNo" column="EMP_NO"/>
		<result property="empName" column="EMP_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="empId" column="EMP_ID"/>
		<result property="empReg" column="EMP_REG"/>
		<result property="gender" column="GENDER"/>
		<result property="empPwd" column="EMP_PWD"/>
		<result property="address" column="ADDRESS"/>
		<result property="deptCode" column="DEPT_CODE"/>
		<result property="jobCode" column="JOB_CODE"/>
		<result property="disabledYN" column="DISABLE_YN"/>
		<result property="empNote" column="EMP_NOTE"/>
		<result property="hireDate" column="HIRE_DATE"/>
		<result property="entDate" column="ENT_DATE"/>
		<result property="apvYN" column="APV_YN"/>
		<result property="entYN" column="ENT_YN"/>
		<result property="ctgNo" column="CTG_NO"/>
	  <result property="deptName" column="DEPT_NAME"/>
		<result property="jobName" column="JOB_NAME"/>
		<result property="jobVacation" column="JOB_VACATION"/>
		<result property="telNo" column="TEL_NO"/>
	</resultMap>
	
	
	<select id="selectList" resultMap="employeeResultSet">
  		SELECT
            A.*,
			B.DEPT_NAME,
            C.JOB_NAME
		FROM
			EMPLOYEE A
			JOIN DEPARTMENT B ON A.DEPT_CODE = B.DEPT_CODE
            JOIN JOB C ON A.JOB_CODE = C.JOB_CODE
		WHERE A.JOB_CODE IN ( 'J5', 'J4', 'J3' )
		AND B.DEPT_NAME IN ( '인사관리부', '회계관리부', '마케팅부' , '자재관리부' , '기획영업부', '경영관리부' , '기술개발부')
		ORDER BY B.DEPT_NAME, A.JOB_CODE DESC
			
	</select>

	<insert id="insertSign" parameterType="Sign">
		INSERT ALL 
		INTO SIGN
		VALUES(SEQ_GNO.NEXTVAL, 'AA', #{signTitle}, #{empNo}, SYSDATE, #{firstApprover}, #{finalApprover}, NULL, NULL, NULL, 'W', 'Y', NULL, #{createName}, #{signContent}, NULL, NULL, NULL, NULL)
		
		INTO STANDARD_FORM
		VALUES(SEQ_GNO.CURRVAL, #{check}, #{signContent}, 'SF')
		
		<if test="originName != null">
		INTO ATTACHMENT
		VALUES(SEQ_FNO.NEXTVAL, SEQ_GNO.CURRVAL, 'SF', #{originName}, #{changeName}, #{filePath}, SYSDATE, DEFAULT)
		</if>
		SELECT * 
	      FROM DUAL
	
	</insert>	
		
	<insert id="insertHelp" parameterType="Sign">
		INSERT ALL 
		INTO SIGN
		VALUES(SEQ_GNO.NEXTVAL, 'BB', #{signTitle}, #{empNo}, SYSDATE, #{firstApprover}, #{finalApprover}, NULL, NULL, NULL, 'W', 'Y', NULL, #{createName}, #{signContent}, NULL, NULL, NULL, NULL)
		
		INTO STANDARD_FORM
		VALUES(SEQ_GNO.CURRVAL, #{check}, #{signContent}, 'SF')
		
		<if test="originName != null">
		INTO ATTACHMENT
		VALUES(SEQ_FNO.NEXTVAL, SEQ_GNO.CURRVAL, 'SF', #{originName}, #{changeName}, #{filePath}, SYSDATE, DEFAULT)
		</if>
		SELECT * 
	      FROM DUAL
	
	</insert>	
	
	
	<insert id="insertDay" parameterType="Sign">
	<if test="reason != null">
		INSERT ALL 
		INTO SIGN
		VALUES(SEQ_GNO.NEXTVAL, 'CC', #{title}, #{empNo}, SYSDATE, #{firstApprover}, #{finalApprover}, NULL, NULL, NULL, 'W', 'Y', NULL, #{createName}, #{reason}, NULL, NULL, NULL, NULL)
		</if>
		INTO VACATION_FORM
		VALUES(SEQ_GNO.CURRVAL, #{title}, #{reason}, #{firstDate}, #{lastDate}, #{vCode})
		
		SELECT * 
	      FROM DUAL
	</insert>	
	
	<select id="selectListCount" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)
		FROM SIGN
		WHERE STATUS_CODE = 'W'
		AND FIRST_APPROVER LIKE '%'||#{empName}||'%'
		AND STATUS = 'Y'
		
	</select>
		
	<select id="selectWaitingList" resultMap="singResultSet">
	
		SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
	        A.SIGN_TITLE,
	        D.DEPT_NAME,
	        A.CREATE_NAME,
	        F.ORIGIN_NAME,
            F.CHANGE_NAME,
            E.TYPE_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN DEPARTMENT D ON C.DEPT_CODE = D.DEPT_CODE
		    LEFT JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
		    LEFT JOIN STANDARD_FORM G ON A.SIGN_NO = G.SIGN_NO
		    LEFT JOIN ATTACHMENT F ON (A.SIGN_NO = F.REF_NO AND G.CTG_NO = F.CTG_NO)
	    WHERE A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'W'
	    AND A.STATUS = 'Y'
	    ORDER BY A.SIGN_NO DESC
    
	</select>
	
	<select id="selectAAlist" resultMap="singResultSet">
	
	SELECT
	    A.SIGN_NO, <!-- 결재번호  -->
	    A.CREATE_NAME, <!--기안자 -->
	    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
	    B.JOB_NAME, <!-- 직급명 -->
	    C.EXPIRY_DATE, <!-- 문서 만료일 -->
	    A.FINAL_APPROVER, <!-- 최종 결재자 -->
	    A.FIRST_APPROVER, <!-- 최초 결재자 -->
	    A.SIGN_TITLE,
	    A.SIGN_CONTENT,
	    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
	    D.ORIGIN_NAME  <!-- 파일 원래 이름 -->
    FROM SIGN A
	    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
	    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
	    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
	    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    LEFT JOIN ATTACHMENT D ON (A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO)
    WHERE A.SIGN_NO = #{signNo}
    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
    AND A.STATUS_CODE = 'W'
    AND A.STATUS = 'Y'
    AND E.TYPE_CODE = 'AA'
	
	</select>	
	

	<select id="selectBBlist" resultMap="singResultSet">
	
	SELECT
	    A.SIGN_NO, <!-- 결재번호  -->
	    A.CREATE_NAME, <!--기안자 -->
	    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
	    B.JOB_NAME, <!-- 직급명 -->
	    C.EXPIRY_DATE, <!-- 문서 만료일 -->
	    A.FINAL_APPROVER, <!-- 최종 결재자 -->
	    A.SIGN_TITLE,
	    A.SIGN_CONTENT,
	    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
	    D.ORIGIN_NAME  <!-- 파일 원래 이름 -->
    FROM SIGN A
	    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
	    LEFT JOIN ATTACHMENT D ON (A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO)
	    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
	    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
	    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
    WHERE A.SIGN_NO = #{signNo}
    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
    AND A.STATUS_CODE = 'W'
    AND A.STATUS = 'Y'
    AND E.TYPE_CODE = 'BB'
	
	</select>	
	
	<select id="selectCClist" resultMap="singResultSet">
		
    SELECT 
        A.SIGN_NO,
        B.V_CODE,
        A.FINAL_APPROVER, 
        C.JOB_NAME,
        A.CREATE_NAME, 
        TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE,
        TO_CHAR(B.FIRST_DATE, 'YY/MM/DD') AS FIRST_DATE,
        TO_CHAR(B.LAST_DATE, 'YY/MM/DD') AS LAST_DATE,
        A.SIGN_TITLE,
        A.SIGN_CONTENT
     FROM SIGN A
        JOIN VACATION_FORM B ON A.SIGN_NO = B.SIGN_NO
        JOIN EMPLOYEE D ON A.EMP_NO = D.EMP_NO
        JOIN JOB C ON D.JOB_CODE = C.JOB_CODE
        JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
     WHERE A.SIGN_NO =  #{signNo}
	    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'W'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'CC'
		
	
	</select>
	
	<update id="updateR" parameterType="Sign">
	
	UPDATE SIGN 
	   SET STATUS_CODE = 'R' , REJECT_DATE = SYSDATE , FIRST_SIGN_NAME = #{empName} , FIRST_SIGN_JOB = #{jobName}
    WHERE SIGN_NO = #{signNo}
	
	</update>
	
	<update id="updateP" parameterType="Sign">
	
	UPDATE SIGN 
	   SET STATUS_CODE = 'P' , FIRST_SIGN_DATE = SYSDATE , FIRST_SIGN_NAME = #{empName} , FIRST_SIGN_JOB = #{jobName}
    WHERE SIGN_NO = #{signNo}
	
	</update>
	
	<select id="selectPListCount" parameterType="string" resultType="_int">
	
	SELECT COUNT(*) <!-- 최종 결재자 -->
		FROM SIGN
		WHERE STATUS_CODE = 'P'
		AND FINAL_APPROVER LIKE '%'||#{empName}||'%'
		AND STATUS = 'Y' 
		
	</select>
	
	<select id="selectGoList" resultMap="singResultSet">
	
		SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
	        A.SIGN_Title,
	        D.DEPT_NAME,
	        A.CREATE_NAME,
	        F.ORIGIN_NAME,
            F.CHANGE_NAME,
            E.TYPE_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE,
            TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN DEPARTMENT D ON C.DEPT_CODE = D.DEPT_CODE
		    LEFT JOIN STANDARD_FORM G ON A.SIGN_NO = G.SIGN_NO
		    LEFT JOIN ATTACHMENT F ON (A.SIGN_NO = F.REF_NO AND G.CTG_NO = F.CTG_NO)
		    LEFT JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.FINAL_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'P'
	    AND A.STATUS = 'Y'
	    ORDER BY A.SIGN_NO DESC
		
	</select>	
	
	<select id="selectAAPlist" resultMap="singResultSet"> <!-- 진행 상태 품의 조회 -->
	
		SELECT
		    A.SIGN_NO, <!-- 결재번호  -->
		    A.CREATE_NAME, <!--기안자 -->
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
		    B.JOB_NAME, <!-- 직급명 -->
		    C.EXPIRY_DATE, <!-- 문서 만료일 -->
		    A.FINAL_APPROVER, <!-- 최종 결재자 -->
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
		    D.ORIGIN_NAME,  <!-- 파일 원래 이름 -->
	        A.FIRST_SIGN_NAME,
	        A.FIRST_SIGN_JOB
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON (A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO)
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'P'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'AA'
	
	</select>	
	
	<select id="selectBBPlist" resultMap="singResultSet"> <!-- 진행 상태 협조 조회 -->
	
		SELECT
		    A.SIGN_NO, <!-- 결재번호  -->
		    A.CREATE_NAME, <!--기안자 -->
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
		    B.JOB_NAME, <!-- 직급명 -->
		    C.EXPIRY_DATE, <!-- 문서 만료일 -->
		    A.FINAL_APPROVER, <!-- 최종 결재자 -->
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
		    D.ORIGIN_NAME,  <!-- 파일 원래 이름 -->
	        A.FIRST_SIGN_NAME,
	        A.FIRST_SIGN_JOB
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON (A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO)
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'P'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'BB'
	
	</select>	
	
	<select id="selectCCPlist" resultMap="singResultSet"> <!-- 진행 상태 휴가 조회 -->
	
  		SELECT 
        A.SIGN_NO,
        B.V_CODE,
        A.FINAL_APPROVER, 
        C.JOB_NAME,
        A.CREATE_NAME, 
        TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE,
        TO_CHAR(B.FIRST_DATE, 'YY/MM/DD') AS FIRST_DATE,
        TO_CHAR(B.LAST_DATE, 'YY/MM/DD') AS LAST_DATE,
        A.SIGN_TITLE,
        A.SIGN_CONTENT,
 	    A.FIRST_SIGN_NAME,
	    A.FIRST_SIGN_JOB, 
	    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE
     FROM SIGN A
        JOIN VACATION_FORM B ON A.SIGN_NO = B.SIGN_NO
        JOIN EMPLOYEE D ON A.EMP_NO = D.EMP_NO
        JOIN JOB C ON D.JOB_CODE = C.JOB_CODE
        JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
     WHERE A.SIGN_NO =  #{signNo}
	    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'P'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'CC'
		
	</select>	
	
	<update id="updateRR" parameterType="Sign">
	
	UPDATE SIGN 
	   SET STATUS_CODE = 'R' , REJECT_DATE = SYSDATE , FINAL_SIGN_NAME = #{empName} , FINAL_SIGN_JOB = #{jobName}
    WHERE SIGN_NO = #{signNo}
	
	</update>
	
	<update id="updateA" parameterType="Sign">
	
	UPDATE SIGN 
	   SET STATUS_CODE = 'A' , FINAL_SIGN_DATE = SYSDATE , FINAL_SIGN_NAME = #{empName} , FINAL_SIGN_JOB = #{jobName}
    WHERE SIGN_NO = #{signNo}
	
	</update>
	
	<select id="selectRListCount" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)
			FROM SIGN
			WHERE STATUS_CODE = 'R'
			AND CREATE_NAME LIKE '%'||#{empName}||'%'
			AND STATUS = 'Y'
			
	</select>
	
	<select id="selectBackList" resultMap="singResultSet">
	
		SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
	        A.SIGN_TITLE,
	        D.DEPT_NAME,
	        A.CREATE_NAME,
	        F.ORIGIN_NAME,
            F.CHANGE_NAME,
            E.TYPE_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE,
            TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
            TO_CHAR(A.REJECT_DATE, 'YY.MM.DD') AS REJECT_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN DEPARTMENT D ON C.DEPT_CODE = D.DEPT_CODE
		    LEFT JOIN STANDARD_FORM G ON A.SIGN_NO = G.SIGN_NO
		    LEFT JOIN ATTACHMENT F ON ( A.SIGN_NO = F.REF_NO AND G.CTG_NO = F.CTG_NO )
		    LEFT JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.CREATE_NAME LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'R'
	    AND A.STATUS = 'Y'
	    ORDER BY A.SIGN_NO DESC
		
	</select>
	
	
	<select id="selectAARlist" resultMap="singResultSet"> <!-- 반려 상태 품의 조회 -->
	
		SELECT
		    A.SIGN_NO, <!-- 결재번호  -->
		    A.CREATE_NAME, <!--기안자 -->
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
		    B.JOB_NAME, <!-- 직급명 -->
		    C.EXPIRY_DATE, <!-- 문서 만료일 -->
		    A.FINAL_APPROVER, <!-- 최종 결재자 -->
		    A.FIRST_APPROVER,
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
		    D.ORIGIN_NAME,  <!-- 파일 원래 이름 -->    
	        A.FIRST_SIGN_NAME,		        
	        A.FIRST_SIGN_JOB,	                
	        A.FINAL_SIGN_NAME,	        
	        A.FINAL_SIGN_JOB,
	        TO_CHAR(A.REJECT_DATE, 'YY.MM.DD') AS REJECT_DATE
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON ( A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO )
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND A.CREATE_NAME LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'R'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'AA'
	
	</select>
	
		<select id="selectBBRlist" resultMap="singResultSet"> <!-- 반려 상태 협조 조회 -->
	
		SELECT
		    A.SIGN_NO, <!-- 결재번호  -->
		    A.CREATE_NAME, <!--기안자 -->
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, <!--기안일 DATE FORMAT 변경 -->
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
		    B.JOB_NAME, <!-- 직급명 -->
		    C.EXPIRY_DATE, <!-- 문서 만료일 -->
		    A.FINAL_APPROVER, <!-- 최종 결재자 -->
		    A.FIRST_APPROVER,
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME, <!-- 파일 바뀐 이름 -->
		    D.ORIGIN_NAME,  <!-- 파일 원래 이름 -->
	        A.FIRST_SIGN_NAME,     		   
	        A.FIRST_SIGN_JOB,  	    
	        A.FINAL_SIGN_NAME,      
	        A.FINAL_SIGN_JOB,
	        TO_CHAR(A.REJECT_DATE, 'YY.MM.DD') AS REJECT_DATE
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON ( A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO )
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND A.CREATE_NAME LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'R'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'BB'
	
	</select>	
	
	<select id="selectCCRlist" resultMap="singResultSet"> <!-- 진행 상태 휴가 조회 -->
	
	SELECT 
        A.SIGN_NO,
        B.V_CODE,
        A.FINAL_APPROVER, 
        A.FIRST_APPROVER,
        C.JOB_NAME,
        A.CREATE_NAME, 
        TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE,
        TO_CHAR(B.FIRST_DATE, 'YY/MM/DD') AS FIRST_DATE,
        TO_CHAR(B.LAST_DATE, 'YY/MM/DD') AS LAST_DATE,
        A.SIGN_TITLE,
        A.SIGN_CONTENT,
 	    A.FIRST_SIGN_NAME,
	    A.FIRST_SIGN_JOB, 
	    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
	    TO_CHAR(A.REJECT_DATE, 'YY.MM.DD') AS REJECT_DATE
     FROM SIGN A
        JOIN VACATION_FORM B ON A.SIGN_NO = B.SIGN_NO
        JOIN EMPLOYEE D ON A.EMP_NO = D.EMP_NO
        JOIN JOB C ON D.JOB_CODE = C.JOB_CODE
        JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
     WHERE A.SIGN_NO =  #{signNo}
	    AND A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'R'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'CC'
		
	</select>	
	
	<select id="selectAListCount" parameterType="string" resultType="_int">
	
			SELECT COUNT(*)  <!-- 로그인한 유저와 부서가 같은 경우 모두 조회 가능 -->
			FROM SIGN A
            JOIN EMPLOYEE B ON A.EMP_NO = B.EMP_NO
			WHERE A.STATUS_CODE = 'A'
			AND B.DEPT_CODE LIKE '%'||#{deptCode}||'%'
			AND A.STATUS = 'Y'
		
	</select>
	
	<select id="selectEndList" resultMap="singResultSet">
	
		SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
	        A.SIGN_TITLE,
	        D.DEPT_NAME,
	        A.CREATE_NAME,
            G.EXPIRY_DATE, 
            Z.V_NAME, 
	        F.ORIGIN_NAME,
            F.CHANGE_NAME,
            E.TYPE_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE,
            TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
            TO_CHAR(A.FINAL_SIGN_DATE, 'YY.MM.DD') AS FINAL_SIGN_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN DEPARTMENT D ON C.DEPT_CODE = D.DEPT_CODE
		    LEFT JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
            LEFT JOIN STANDARD_FORM G ON A.SIGN_NO = G.SIGN_NO
		    LEFT JOIN ATTACHMENT F ON ( A.SIGN_NO = F.REF_NO AND G.CTG_NO = F.CTG_NO )
            LEFT JOIN VACATION_FORM H ON A.SIGN_NO = H.SIGN_NO
            LEFT JOIN VACATION Z ON H.V_CODE = Z.V_CODE
	    WHERE C.DEPT_CODE LIKE '%'||#{deptCode}||'%'
	    AND A.STATUS_CODE = 'A'
        AND A.FINAL_SIGN_DATE IS NOT NULL
	    AND A.STATUS = 'Y'
	    ORDER BY A.SIGN_NO DESC
		
	</select>	
	
	<select id="selectAAAlist" resultMap="singResultSet"> <!-- 완료 상태 품의 조회 -->
	
		SELECT
		    A.SIGN_NO,
		    A.CREATE_NAME, 
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, 
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
            TO_CHAR(A.FINAL_SIGN_DATE, 'YY.MM.DD') AS FINAL_SIGN_DATE,
		    B.JOB_NAME,
		    C.EXPIRY_DATE, 
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME,
		    D.ORIGIN_NAME, 
	        A.FIRST_SIGN_NAME,
            A.FINAL_SIGN_NAME,
	        A.FIRST_SIGN_JOB,
            A.FINAL_SIGN_JOB
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON ( A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO )
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND F.DEPT_CODE LIKE '%'||#{deptCode}||'%'
	    AND A.STATUS_CODE = 'A'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'AA'
	
	</select>	
	
	<select id="selectBBAlist" resultMap="singResultSet"> <!-- 완료 상태 협조 조회 -->
	
		SELECT
		    A.SIGN_NO,
		    A.CREATE_NAME, 
		    TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE, 
		    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
            TO_CHAR(A.FINAL_SIGN_DATE, 'YY.MM.DD') AS FINAL_SIGN_DATE,
		    B.JOB_NAME,
		    C.EXPIRY_DATE, 
		    A.SIGN_TITLE,
		    A.SIGN_CONTENT,
		    D.CHANGE_NAME,
		    D.ORIGIN_NAME, 
	        A.FIRST_SIGN_NAME,
            A.FINAL_SIGN_NAME,
	        A.FIRST_SIGN_JOB,
            A.FINAL_SIGN_JOB
	    FROM SIGN A
		    JOIN STANDARD_FORM C ON A.SIGN_NO = C.SIGN_NO
		    LEFT JOIN ATTACHMENT D ON ( A.SIGN_NO = D.REF_NO AND C.CTG_NO = D.CTG_NO )
		    JOIN EMPLOYEE F ON A.EMP_NO = F.EMP_NO
		    JOIN JOB B ON F.JOB_CODE = B.JOB_CODE
		    JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
	    WHERE A.SIGN_NO = #{signNo}
	    AND F.DEPT_CODE LIKE '%'||#{deptCode}||'%'
	    AND A.STATUS_CODE = 'A'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'BB'
	
	</select>	
	
	<select id="selectCCAlist" resultMap="singResultSet"> <!-- 완료 상태 휴가 조회 -->
	
  		SELECT 
        A.SIGN_NO,
        B.V_CODE,
        A.FINAL_APPROVER, 
        C.JOB_NAME,
        A.CREATE_NAME, 
        TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE,
        TO_CHAR(B.FIRST_DATE, 'YY/MM/DD') AS FIRST_DATE,
        TO_CHAR(B.LAST_DATE, 'YY/MM/DD') AS LAST_DATE,
        A.SIGN_TITLE,
        A.SIGN_CONTENT,
	    A.FIRST_SIGN_NAME,
        A.FINAL_SIGN_NAME,
	    A.FIRST_SIGN_JOB,
        A.FINAL_SIGN_JOB, 
	    TO_CHAR(A.FIRST_SIGN_DATE, 'YY.MM.DD') AS FIRST_SIGN_DATE,
	    TO_CHAR(A.FINAL_SIGN_DATE, 'YY.MM.DD') AS FINAL_SIGN_DATE
     FROM SIGN A
        JOIN VACATION_FORM B ON A.SIGN_NO = B.SIGN_NO
        JOIN EMPLOYEE D ON A.EMP_NO = D.EMP_NO
        JOIN JOB C ON D.JOB_CODE = C.JOB_CODE
        JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
     WHERE A.SIGN_NO =  #{signNo}
	    AND D.DEPT_CODE LIKE '%'||#{deptCode}||'%'
	    AND A.STATUS_CODE = 'A'
	    AND A.STATUS = 'Y'
	    AND E.TYPE_CODE = 'CC'
		
	</select>	
	
	<select id="selectMywListCount" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)  
			FROM SIGN A
			WHERE A.STATUS_CODE = 'W'
			AND A.CREATE_NAME LIKE '%'||#{empName}||'%'
			AND A.STATUS = 'Y'
		
	</select>
	
	<select id="selectMySignWaitingList" resultMap="singResultSet"> <!-- 내 결재 대기함 List -->
	
		SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
	        A.SIGN_TITLE,
	        D.DEPT_NAME,
	        A.CREATE_NAME, 
	        F.ORIGIN_NAME,
            F.CHANGE_NAME,
            E.TYPE_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YY.MM.DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN DEPARTMENT D ON C.DEPT_CODE = D.DEPT_CODE
		    LEFT JOIN SIGN_TYPE E ON A.TYPE_CODE = E.TYPE_CODE
            LEFT JOIN STANDARD_FORM G ON A.SIGN_NO = G.SIGN_NO
            LEFT JOIN VACATION_FORM H ON A.SIGN_NO = H.SIGN_NO
		    LEFT JOIN ATTACHMENT F ON (A.SIGN_NO = F.REF_NO AND G.CTG_NO = F.CTG_NO)
	    WHERE A.CREATE_NAME LIKE '%'||#{empName}||'%'
	    AND A.STATUS_CODE = 'W'
	    AND A.FIRST_SIGN_DATE IS NULL
        AND A.FINAL_SIGN_DATE IS NULL
	    AND A.STATUS = 'Y'
	    ORDER BY A.SIGN_NO DESC
		
	</select>	
	
	<update id="updateAAsign" parameterType="Sign"> <!-- sign 테이블 업데이트 -->
	
	 	UPDATE SIGN 
		   SET FIRST_APPROVER = #{firstApprover} , FINAL_APPROVER = #{finalApprover} , SIGN_TITLE = #{signTitle} , SIGN_CONTENT = #{signContent} , MODIFY_DATE = SYSDATE
	    WHERE SIGN_NO = #{signNo}

	</update>
	
	<update id="updateAAstandard" parameterType="Sign"> <!-- standardForm 테이블 업데이트 -->
		
		UPDATE STANDARD_FORM SET EXPIRY_DATE = #{check} , SIGN_CONTENT = #{signContent}
			
		WHERE SIGN_NO = #{signNo}
		
		AND CTG_NO = 'SF'	
	
	</update>
	
	<select id="selectCountAttachment" parameterType="Sign" resultType="_int"> <!-- attachment의 카운트를 세와서 update 할지 insert할지 체크할거임 -->
	
		SELECT COUNT(*)  
			FROM ATTACHMENT
			WHERE REF_NO = #{signNo}
			AND CTG_NO = 'SF'
			AND STATUS = 'Y'
		
	</select>
	
	<update id="updateAttachment" parameterType="Sign"> <!-- attachment 테이블 업데이트 -->
		

		UPDATE ATTACHMENT
			SET ORIGIN_NAME = #{originName} , CHANGE_NAME = #{changeName} , FILE_PATH = #{filePath}
			WHERE REF_NO = #{signNo}
			AND CTG_NO = 'SF'
			AND STATUS = 'Y'

	</update>
	
	<insert id="insertAttachment" parameterType="Sign"> <!-- 첨부파일이 없는 경우 attachment insert -->
		

		INSERT INTO ATTACHMENT
		VALUES(SEQ_FNO.NEXTVAL, #{signNo}, 'SF', #{originName}, #{changeName}, #{filePath}, SYSDATE, DEFAULT)
	
	</insert>
	
	
	<update id="DeleteN" parameterType="Sign">
	
		UPDATE SIGN 
		   SET STATUS = 'N' 
	    WHERE SIGN_NO = #{signNo}
	    AND CREATE_NAME = #{empName}
		
	</update>
	
	<!-- 결재함 간편 조회 시작 -->
	
	<select id="selectViewW" resultMap="singResultSet"> <!-- W 요청 조회 -->
	
	<!-- <= 등호 사용으로 인해 CDATA 지정 -->
	
	 <![CDATA[  
	 
	SELECT G.*
        FROM ( 
        SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
            A.SIGN_TITLE,
            H.STATUS_NAME,        
	        A.CREATE_NAME,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN SIGN_STATUS H ON A.STATUS_CODE = H.STATUS_CODE
	     WHERE A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
		    AND A.STATUS_CODE = 'W'
		    AND A.STATUS = 'Y'
		    ORDER BY A.SIGN_NO DESC
	        )G
	        WHERE ROWNUM <= 3
     ]]>
     
	</select>
	
	<select id="selectViewP" resultMap="singResultSet"> <!-- P 요청 조회 -->
	
	<!-- <= 등호 사용으로 인해 CDATA 지정 -->
	
	 <![CDATA[  
	 
	SELECT G.*
        FROM ( 
        SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
            A.SIGN_TITLE,
            H.STATUS_NAME,        
	        A.CREATE_NAME,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN SIGN_STATUS H ON A.STATUS_CODE = H.STATUS_CODE
	     WHERE A.FINAL_APPROVER LIKE '%'||#{empName}||'%'
		    AND A.STATUS_CODE = 'P'
		    AND A.STATUS = 'Y'
		    ORDER BY A.SIGN_NO DESC
	        )G
	        WHERE ROWNUM <= 3
     ]]>
     
	</select>
	
	<select id="selectViewR" resultMap="singResultSet"> <!-- R 요청 조회 -->
	
	<!-- <= 등호 사용으로 인해 CDATA 지정 -->
	
	 <![CDATA[  
	 
	SELECT G.*
        FROM ( 
        SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
            A.SIGN_TITLE,
            H.STATUS_NAME,        
	        A.CREATE_NAME,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN SIGN_STATUS H ON A.STATUS_CODE = H.STATUS_CODE
	     WHERE A.CREATE_NAME LIKE '%'||#{empName}||'%'
		    AND A.STATUS_CODE = 'R'
		    AND A.STATUS = 'Y'
		    ORDER BY A.SIGN_NO DESC
	        )G
	        WHERE ROWNUM <= 3
     ]]>
     
	</select>
	
	<select id="selectViewA" resultMap="singResultSet"> <!-- A 요청 조회 -->
	
	<!-- <= 등호 사용으로 인해 CDATA 지정 -->
	
	 <![CDATA[  
	 
	SELECT G.*
        FROM ( 
        SELECT 
			A.SIGN_NO,
			B.TYPE_NAME,
            A.SIGN_TITLE,
            H.STATUS_NAME,        
	        A.CREATE_NAME,
	        C.DEPT_CODE,
	        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		FROM SIGN A
		    JOIN SIGN_TYPE B ON A.TYPE_CODE = B.TYPE_CODE
		    JOIN EMPLOYEE C ON A.EMP_NO = C.EMP_NO
		    JOIN SIGN_STATUS H ON A.STATUS_CODE = H.STATUS_CODE
	      WHERE C.DEPT_CODE LIKE '%'||#{deptCode}||'%'
		    AND A.STATUS_CODE = 'A'
		    AND A.STATUS = 'Y'
		    ORDER BY A.SIGN_NO DESC
	        )G
	        WHERE ROWNUM <= 3
	
     ]]>
     
	</select>
	
	<select id="selectCountW" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)  
			FROM SIGN A
			WHERE A.FIRST_APPROVER LIKE '%'||#{empName}||'%'
			AND A.STATUS_CODE = 'W'
			AND A.STATUS = 'Y'
		
	</select>
	
	<select id="selectCountP" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)  
			FROM SIGN A
			WHERE A.FINAL_APPROVER LIKE '%'||#{empName}||'%'
			AND A.STATUS_CODE = 'P'
			AND A.STATUS = 'Y'
		
	</select>
	
	<select id="selectCountR" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)  
			FROM SIGN A
			WHERE A.CREATE_NAME LIKE '%'||#{empName}||'%'
			AND A.STATUS_CODE = 'R'
			AND A.STATUS = 'Y'
		
	</select>
	
	<select id="selectCountA" parameterType="string" resultType="_int">
	
		SELECT COUNT(*)  
			FROM SIGN A
			JOIN EMPLOYEE B ON A.EMP_NO = B.EMP_NO
			WHERE B.DEPT_CODE LIKE '%'||#{deptCode}||'%'
			AND A.FINAL_SIGN_DATE IS NOT NULL
			AND A.STATUS_CODE = 'A'
			AND A.STATUS = 'Y'
		
	</select>
	
	</mapper>

		